{"version":3,"sources":["images/icon-close.svg","images/logo.svg","components/Header/Header.js","components/Header/index.js","components/Footer/Footer.js","components/Footer/index.js","components/ImagePopup/ImagePopup.js","components/ImagePopup/index.js","contexts/CurrentUserContext.js","components/PlaceCard/index.js","components/PlaceCard/PlaceCard.js","components/PopupWithForm/PopupWithForm.js","components/PopupWithForm/index.js","components/EditProfilePopup/index.js","components/EditProfilePopup/EditProfilePopup.js","utils/urlValidator.js","components/AddPlacePopup/index.js","components/AddPlacePopup/AddPlacePopup.js","components/EditAvatarPopup/index.js","components/EditAvatarPopup/EditAvatarPopup.js","components/Main/index.js","components/Main/Main.js","utils/api.js","components/App.js","index.js"],"names":["module","exports","Header","className","src","mestoLogo","alt","Footer","ImagePopup","handleClosePopup","selectedImage","onClick","target","keyCode","classList","contains","closeIcon","CurrentUserContext","createContext","PlaceCard","memo","cardData","name","likes","link","_id","owner","imageCardClickHandler","deleteHandler","likeHandler","currentUser","useContext","isOwner","isCurrUserLikeCard","some","whoLiked","id","disabled","style","backgroundImage","imageUrl","slice","length","PopupWithForm","title","popupName","children","closeHandler","currentTarget","onKeyUp","EditProfilePopup","isEditProfileOpen","onEditProfilePopupToggle","onSubmitProfile","about","useState","profileName","setProfileName","profileAbout","setProfileAbout","useEffect","onSubmit","ev","preventDefault","required","type","placeholder","maxLength","value","onChange","validationOptions","require_protocol","urlValidator","urlString","isUrl","AddPlacePopup","isAddPlacePopupOpen","onAddPlacePopupToggle","onSubmitPlace","placeName","setPlaceName","placeLink","setPlaceLink","isFormValidity","e","noValidate","minLength","EditAvatarPopup","isEditAvatarPopupOpen","onEditAvatarPopupToggle","onSubmitAvatar","avatarInput","useRef","submitButton","avatar","current","ref","validity","valid","removeAttribute","setAttribute","Main","onCardClick","submitProfile","cards","onCardDelete","onCardLike","onDeleteCard","cardId","onLikeCard","isLiked","map","card","key","api","url","token","this","res","ok","json","Promise","reject","status","text","fetch","headers","authorization","then","_getPromiseRes","catch","err","console","error","method","body","JSON","stringify","isLikedNow","App","setEditProfileOpen","setAddPlacePopupOpen","setEditAvatarPopupOpen","selectedCardImageUrl","setSelectedCardImage","setCurrentUser","setCards","getInitialCards","cardsFromApi","getUserInfo","userData","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","Provider","updateUserInfo","newUserData","updateUserAvatar","currentUserData","imageLink","postCard","newCard","deleteCard","filter","updateLike","newCardsArr","currCard","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,gUCY5BC,ICXAA,EDGf,WACI,OACI,4BAAQC,UAAU,wBACd,yBAAKC,IAAKC,IAAWC,IAAI,mDAAgBH,UAAU,W,MEIhDI,ICVAA,EDEf,WACI,OACI,4BAAQJ,UAAU,UACd,uBAAGA,UAAU,gBAAb,kC,8BEaGK,IClBAA,EDGf,YAA0D,IAApCC,EAAmC,EAAnCA,iBAAkBC,EAAiB,EAAjBA,cAKpC,OACI,yBAAKC,QALT,YAAiD,IAApBC,EAAmB,EAAnBA,OAAmB,EAAXC,SAChCD,EAAOE,UAAUC,SAAS,uBAAyBN,KAInBN,UAAU,0CACvC,yBAAKA,UAAU,wBACX,yBAAKC,IAAKY,IAAWV,IAAI,sEAAeH,UAAU,gBAClD,yBAAKC,IAAKM,EAAeP,UAAU,qBAAqBG,IAAI,yGEX7DW,EADYC,0BCAZC,G,MCGGC,gBAAK,YAKhB,IAAD,IAJFC,SAAYC,EAIV,EAJUA,KAAMC,EAIhB,EAJgBA,MAAOC,EAIvB,EAJuBA,KAAMC,EAI7B,EAJ6BA,IAAKC,EAIlC,EAJkCA,MACpCC,EAGE,EAHFA,sBACAC,EAEE,EAFFA,cACAC,EACE,EADFA,YAEMC,EAAcC,qBAAWd,GACzBe,EAAUF,EAAYL,MAAQC,EAAMD,IACpCQ,EAAqBV,EAAMW,MAAK,SAAAC,GAAQ,OAAIA,EAASV,MAAQK,EAAYL,OAgB/E,OACI,yBAAKW,GAAIX,EAAKtB,UAAU,cACpB,4BAAQQ,QAZQ,WACpBqB,GAAWJ,EAAcH,IAWaY,UAAWL,EAAS7B,UAAU,4BAChE,yBAAKA,UAAU,oBACXmC,MAAO,CAAEC,gBAAgB,OAAD,OAASf,EAAT,MACxBb,QAXc,SAAC,GAAgB,IAEjC6B,EAFgC,EAAb5B,OACU0B,MAA3BC,gBACyBE,MAAM,GAAI,GAC3Cd,EAAsBa,MAUlB,yBAAKrC,UAAU,2BACX,wBAAIA,UAAU,oBAAoBmB,GAClC,6BACI,4BAAQX,QAxBF,WAClBkB,EAAYJ,EAAKQ,IAwBD9B,UACI,kCACG8B,EAAqB,+BAAiC,MAGjE,yBAAK9B,UAAU,4BAA4BoB,EAAMmB,e,MCjBtDC,IC1BAA,EDGf,YAA0E,IAAjDlC,EAAgD,EAAhDA,iBAAkBmC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,SAEnDC,EAAe,SAAC,GAAwC,IAAtCnC,EAAqC,EAArCA,OAAQoC,EAA6B,EAA7BA,cAAenC,EAAc,EAAdA,SACvCD,EAAOE,UAAUC,SAAS,gBAAmBH,IAAWoC,IACxDvC,IAEmB,KACnBI,GACAJ,KAIR,OACI,yBAAKE,QAASoC,EAAcE,QAASF,EAAc5C,UAAS,2BAAsB0C,EAAtB,qBACxD,yBAAK1C,UAAU,kBACX,yBAAKC,IAAKY,IAAWV,IAAI,sEAAeH,UAAU,gBAClD,wBAAIA,UAAU,gBAAgByC,GAC7BE,GAAYA,KEpBdI,ECGiB9B,gBAAK,YAAuE,IAApE+B,EAAmE,EAAnEA,kBAAmBC,EAAgD,EAAhDA,yBAA0BC,EAAsB,EAAtBA,gBAAsB,EAC/EtB,qBAAWd,GAA3BK,EAD+F,EAC/FA,KAAMgC,EADyF,EACzFA,MADyF,EAEjEC,mBAAS,IAFwD,mBAEhGC,EAFgG,KAEnFC,EAFmF,OAG/DF,mBAAS,IAHsD,mBAGhGG,EAHgG,KAGlFC,EAHkF,KAKvGC,qBAAU,WACNH,EAAenC,GACfqC,EAAgBL,KACjB,CAAChC,EAAMgC,IAkBV,OACIH,GAAqB,kBAAC,EAAD,CACjB1C,iBAAkB2C,EAClBP,UAAU,eACVD,MAAM,4HACNE,SACI,0BAAMe,SAdO,SAACC,GACtBA,EAAGC,iBACHV,EAAgB,CACZ/B,KAAMkC,EACNF,MAAOI,KAU+BvD,UAAU,cAAcmB,KAAK,QAC3D,6BACI,2BAAO0C,UAAQ,EACXC,KAAK,OACL3C,KAAK,eACLnB,UAAU,2CACV+D,YAAY,qBACZC,UAAU,KACVC,MAAOZ,EACPa,SA/BC,SAAC,GAAgB,IAAdzD,EAAa,EAAbA,OACxB6C,EAAe7C,EAAOwD,UAgCN,0BAAMjE,UAAW,6CACVqD,EAAYd,OAAS,EAAI,wBAA0B,KAD1D,8MAIJ,6BACI,2BAAOsB,UAAQ,EACXC,KAAK,OACL3C,KAAK,gBACLnB,UAAU,4CACV+D,YAAY,kCACZC,UAAU,KACVC,MAAOV,EACPW,SAzCE,SAAC,GAAgB,IAAdzD,EAAa,EAAbA,OACzB+C,EAAgB/C,EAAOwD,UA0CP,0BAAMjE,UAAW,8CACVuD,EAAahB,OAAS,EAAI,wBAA0B,KAD3D,4OAIJ,4BAAQuB,KAAK,SAAS9D,UAAU,wBAAhC,gE,iBC/DdmE,EAAoB,CACtBC,kBAAkB,GAOPC,EAJM,SAACC,GAClB,OAAOC,IAAMD,EAAWH,ICNbK,ECGcvD,gBAAK,YAI3B,IAHHwD,EAGE,EAHFA,oBACAC,EAEE,EAFFA,sBACAC,EACE,EADFA,cACE,EAEgCvB,mBAAS,IAFzC,mBAEKwB,EAFL,KAEgBC,EAFhB,OAGgCzB,mBAAS,IAHzC,mBAGK0B,EAHL,KAGgBC,EAHhB,KAkBIC,EAAiBJ,EAAUrC,OAAS,GAAK8B,EAAaS,GAE5D,OACIL,GAAuB,kBAAC,EAAD,CACnBnE,iBAAkBoE,EAClBhC,UAAU,WACVD,MAAM,gEACNE,SACI,0BAAMe,SAbQ,SAACuB,GACvBA,EAAErB,iBACFoB,GAAkBL,EAAcC,EAAWE,IAWAI,YAAU,EAAClF,UAAU,cAAcmB,KAAK,OACvE,6BACI,2BAAO0C,UAAQ,EACXC,KAAK,OACL3C,KAAK,OACLnB,UAAU,sCACV+D,YAAY,mDACZoB,UAAU,IACVnB,UAAU,KACVC,MAAOW,EACPV,SA/BE,SAAC,GAAgB,IAAdzD,EAAa,EAAbA,OACzBoE,EAAapE,EAAOwD,UAgCJ,0BAAMjE,UAAU,8BAEpB,6BACI,2BAAO6D,UAAQ,EACXC,KAAK,MACL3C,KAAK,OACLnB,UAAU,0CACV+D,YAAY,qGACZE,MAAOa,EACPZ,SAtCE,SAAC,GAAgB,IAAdzD,EAAa,EAAbA,OACzBsE,EAAatE,EAAOwD,UAuCJ,0BAAMjE,UAAU,8BAEpB,4BACI8D,KAAK,SACL9D,UAAU,uBACVkC,UAAW8C,GAHf,WC1DLI,ECEgBnE,gBAAK,YAAyE,IAAtEoE,EAAqE,EAArEA,sBAAuBC,EAA8C,EAA9CA,wBAAyBC,EAAqB,EAArBA,eAE7EC,EAAcC,mBACdC,EAAeD,mBAiBrB,OAAQJ,GAAyB,kBAAC,EAAD,CAC7B/E,iBAAkBgF,EAClB5C,UAAU,cACVD,MAAM,wFACNE,SACI,0BAAMe,SAZc,SAACC,GACzBA,EAAGC,iBACH2B,EAAe,CACXI,OAAQH,EAAYI,QAAQ3B,SASSjE,UAAU,cAAcmB,KAAK,UAC9D,6BACI,2BAAO0E,IAAKL,EAAa3B,UAAQ,EAC7BC,KAAK,MACL3C,KAAK,OACLnB,UAAU,0CACV+D,YAAY,yFACZG,SA3BQ,WACpBsB,EAAYI,QAAQE,SAASC,MAC7BL,EAAaE,QAAQI,gBAAgB,YAErCN,EAAaE,QAAQK,aAAa,WAAY,OAyBtC,0BAAMjG,UAAU,8BAEpB,4BAAQ6F,IAAKH,EAAc5B,KAAK,SAAS9D,UAAU,uBAAuBkC,UAAQ,GAAlF,+FCtCDgE,ECQKjF,gBAAK,YAelB,IAdHwD,EAcE,EAdFA,oBACAY,EAaE,EAbFA,sBACArC,EAYE,EAZFA,kBACA0B,EAWE,EAXFA,sBACAY,EAUE,EAVFA,wBACArC,EASE,EATFA,yBACAkD,EAQE,EARFA,YACA5F,EAOE,EAPFA,cACA6F,EAME,EANFA,cACAb,EAKE,EALFA,eACAc,EAIE,EAJFA,MACAC,EAGE,EAHFA,aACAC,EAEE,EAFFA,WACA5B,EACE,EADFA,cACE,EAE8B/C,qBAAWd,GAAnCK,EAFN,EAEMA,KAAMgC,EAFZ,EAEYA,MAAOwC,EAFnB,EAEmBA,OAEfa,EAAe,SAACC,GAClBH,EAAaG,IAGXC,EAAa,SAACD,EAAQE,GACxBJ,EAAWE,EAAQE,IAGvB,OACI,0BAAM3G,UAAU,QACZ,6BAASA,UAAU,yBACf,yBAAKA,UAAU,aACX,yBAAKmC,MAAO,CAAEC,gBAAgB,OAAD,OAASuD,EAAT,MAAsBnF,QAAS8E,EAAyBtF,UAAU,qBAC/F,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,mBAAmBmB,GACjC,uBAAGnB,UAAU,kBAAkBmD,GAC/B,4BAAQ3C,QAASyC,EAA0BjD,UAAU,iCAArD,SAEJ,4BAAQQ,QAASkE,EAAuB1E,UAAU,4BAAlD,OAGR,6BAASA,UAAU,6BAEXqG,EAAM9D,QACN8D,EAAMO,KAAI,SAACC,GACP,OACI,kBAAC,EAAD,CAAWC,IAAKD,EAAKvF,IACjBJ,SAAU2F,EACVrF,sBAAuB2E,EACvBzE,YAAagF,EACbjF,cAAe+E,QAMnC,6BAASxG,UAAU,mBAGdO,GAAiB,kBAAC,EAAD,CACdD,iBAAkB6F,EAClB5F,cAAeA,IAInB,kBAAC,EAAD,CACIyC,kBAAmBA,EACnBC,yBAA0BA,EAC1BC,gBAAiBkD,IAIrB,kBAAC,EAAD,CACI3B,oBAAqBA,EACrBC,sBAAuBA,EACvBC,cAAeA,IAInB,kBAAC,EAAD,CACIU,sBAAuBA,EACvBC,wBAAyBA,EACzBC,eAAgBA,S,gBCmDrBwB,EAFH,I,WAtIR,WAAYC,EAAKC,GAAQ,oBACrBC,KAAKF,IAAMA,EACXE,KAAKD,MAAQA,E,2DAGFE,GACX,OAAIA,EAAIC,GAAaD,EAAIE,OAClBC,QAAQC,OAAOJ,EAAIK,OAAQL,EAAIM,Q,wCAKtC,OAAOC,MAAM,GAAD,OAAIR,KAAKF,IAAT,UAAsB,CAC9BW,QAAS,CACLC,cAAeV,KAAKD,SAIvBY,KAAKX,KAAKY,gBAEVC,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,Q,oCAMlC,OAAON,MAAM,GAAD,OAAIR,KAAKF,IAAT,aAAyB,CACjCW,QAAS,CACLC,cAAeV,KAAKD,SAIvBY,KAAKX,KAAKY,gBAEVC,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,Q,qCAIvB7G,EAAMgC,GAEjB,OAAOuE,MAAM,GAAD,OAAIR,KAAKF,IAAT,aAAyB,CACjCmB,OAAQ,QACRR,QAAS,CACLC,cAAeV,KAAKD,MACpB,eAAgB,oBAEpBmB,KAAMC,KAAKC,UAAU,CACjBnH,OACAgC,YAIH0E,KAAKX,KAAKY,gBAEVC,OAAM,SAACC,GACJC,QAAQC,MAAMF,Q,uCAITrC,GAEb,OAAO+B,MAAM,GAAD,OAAIR,KAAKF,IAAT,oBAAgC,CACxCmB,OAAQ,QACRR,QAAS,CACLC,cAAeV,KAAKD,MACpB,eAAgB,oBAEpBmB,KAAMC,KAAKC,UAAU,CACjB3C,aAIHkC,KAAKX,KAAKY,gBAEVC,OAAM,SAACC,GACJC,QAAQC,MAAMF,Q,+BAIjB7G,EAAME,GAEX,OAAOqG,MAAM,GAAD,OAAIR,KAAKF,IAAT,UAAsB,CAC9BmB,OAAQ,OACRR,QAAS,CACLC,cAAeV,KAAKD,MACpB,eAAgB,oBAEpBmB,KAAMC,KAAKC,UAAU,CACjBnH,OACAE,WAIHwG,KAAKX,KAAKY,gBAEVC,OAAM,SAACC,GACJC,QAAQC,MAAMF,Q,iCAIfvB,GACP,OAAOiB,MAAM,GAAD,OAAIR,KAAKF,IAAT,kBAAsBP,GAAU,CACxC0B,OAAQ,SACRR,QAAS,CACLC,cAAeV,KAAKD,SAIvBY,KAAKX,KAAKY,gBAEVC,OAAM,SAACC,GACJC,QAAQC,MAAMF,Q,iCAIfvB,EAAQ8B,GACf,OAAOb,MAAM,GAAD,OAAIR,KAAKF,IAAT,uBAA2BP,GAAU,CAC7C0B,OAAQI,EAAa,SAAW,MAChCZ,QAAS,CACLC,cAAeV,KAAKD,SAIvBY,KAAKX,KAAKY,gBAEVC,OAAM,SAACC,GACJC,QAAQC,MAAMF,U,KAQlB,CAFO,mCADF,wCCJFQ,MA5Hf,WAAgB,IAAD,EAEmCpF,oBAAS,GAF5C,mBAENJ,EAFM,KAEayF,EAFb,OAGuCrF,oBAAS,GAHhD,mBAGNqB,EAHM,KAGeiE,EAHf,OAI2CtF,oBAAS,GAJpD,mBAINiC,EAJM,KAIiBsD,EAJjB,OAKwCvF,mBAAS,MALjD,mBAKNwF,EALM,KAKgBC,EALhB,OAMyBzF,mBAAS,IANlC,mBAMNzB,EANM,KAMOmH,EANP,OAOa1F,mBAAS,IAPtB,mBAONiD,EAPM,KAOC0C,EAPD,KAUbtF,qBAAU,WACRsD,EACGiC,kBACAnB,MAAK,SAAAoB,GACJF,EAASE,MAEVlB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,QAC7B,IAGHvE,qBAAU,WACRsD,EACGmC,cACArB,MAAK,YAAmC,IAAhClC,EAA+B,EAA/BA,OAAQxE,EAAuB,EAAvBA,KAAMgC,EAAiB,EAAjBA,MAAO7B,EAAU,EAAVA,IAC5BwH,GAAe,SAACK,GAEd,OADiB,2BAAQA,GAAR,IAAkBhI,OAAMgC,QAAOwC,SAAQrE,cAI3DyG,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,QAC7B,IAEH,IAAMoB,EAAwB,WAC5BT,GAAwBtD,IAGpBgE,EAAyB,WAC7BZ,GAAoBzF,IAGhBsG,EAAsB,WAC1BZ,GAAsBjE,IA2DxB,OACE,kBAAC,EAAmB8E,SAApB,CAA6BtF,MAAOtC,GAClC,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEqB,kBAAmBA,EACnByB,oBAAqBA,EACrBY,sBAAuBA,EACvBC,wBAAyB8D,EACzBnG,yBAA0BoG,EAC1B3E,sBAAuB4E,EACvB/I,cAAeqI,EACfzC,YAnEkB,SAAC9D,GAErBwG,EADED,EACmB,KAGFvG,IA+DjB+D,cA5DuB,SAAC,GAAqB,IAAnBjF,EAAkB,EAAlBA,KAAMgC,EAAY,EAAZA,MACpC4D,EACGyC,eAAerI,EAAMgC,GACrB0E,MAAK,SAAA4B,GACJX,EAAeW,GACfJ,QAwDA9D,eApDsB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OAC7BoB,EACG2C,iBAAiB/D,GACjBkC,MAAK,SAAA4B,GACJX,GAAe,SAACa,GAEd,OADkB,2BAAQA,GAAR,IAAyBhE,OAAQ8D,EAAY9D,YAGjEyD,QA6CAzE,cArBqB,SAACC,EAAWgF,GACrC7C,EACG8C,SAASjF,EAAWgF,GACpB/B,MAAK,SAAAiC,GAAO,OAAIf,EAAS,GAAD,mBAAK1C,GAAL,CAAYyD,QACpCjC,MAAK,kBAAMyB,QAkBVhD,aA1CoB,SAACG,GACzBM,EACGgD,WAAWtD,GACXoB,MAAK,WACJkB,GAAS,SAAA1C,GAAK,OACZA,EAAM2D,QAAO,qBAAG1I,MAAkBmF,YAsCpCF,WAjCkB,SAACE,EAAQE,GAC/BI,EACGkD,WAAWxD,EAAQE,GACnBkB,MAAK,SAAAiC,GACJ,IAAMI,EAAc7D,EACjBO,KAAI,SAAAuD,GAAQ,OAAIA,EAAS7I,MAAQmF,EAASqD,EAAUK,KACvDpB,EAASmB,OA4BT7D,MAAOA,IAET,kBAAC,EAAD,QC1HN+D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.f3c117a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-close.a3e3d9bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.9d0e3a93.svg\";","import React from 'react';\r\nimport './header.css';\r\nimport mestoLogo from '../../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header root__section\">\r\n            <img src={mestoLogo} alt=\"Mesto логотип\" className=\"logo\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import Header from './Header';\r\nexport default Header;","import React from 'react';\r\nimport './footer/footer.css';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__text\">Mesto Russia by NDI &copy;2020</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import Footer from './Footer';\r\nexport default Footer;","import React from 'react';\r\nimport './popup-image/popup-image.css';\r\nimport closeIcon from '../../images/icon-close.svg';\r\n\r\nfunction ImagePopup({ handleClosePopup, selectedImage }) {\r\n    function popupCloseHandler({ target, keyCode }) {\r\n        !target.classList.contains('popup-image__image') && handleClosePopup();\r\n    };\r\n\r\n    return (\r\n        <div onClick={popupCloseHandler} className=\"popup popup_type_image popup_is-opened\">\r\n            <div className=\"popup-image__content\">\r\n                <img src={closeIcon} alt=\"Закрыть окно\" className=\"popup-close\" />\r\n                <img src={selectedImage} className=\"popup-image__image\" alt=\"Картинка карточки\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","import ImagePopup from './ImagePopup';\r\nexport default ImagePopup;","import { createContext } from 'react';\r\nconst CurrentUserContext = createContext();\r\nexport default CurrentUserContext;","import PlaceCard from './PlaceCard';\r\nexport default PlaceCard;","import React, { memo, useContext } from 'react';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\nimport './place-card/place-card.css';\r\n\r\nconst PlaceCard = memo(({\r\n    cardData: { name, likes, link, _id, owner },\r\n    imageCardClickHandler,\r\n    deleteHandler,\r\n    likeHandler\r\n}) => {\r\n    const currentUser = useContext(CurrentUserContext);\r\n    const isOwner = currentUser._id === owner._id;\r\n    const isCurrUserLikeCard = likes.some(whoLiked => whoLiked._id === currentUser._id);\r\n\r\n    const onLikeHandler = () => {\r\n        likeHandler(_id, isCurrUserLikeCard);\r\n    };\r\n\r\n    const onDeleteHandler = () => {\r\n        isOwner && deleteHandler(_id);\r\n    };\r\n\r\n    const imageClickHandler = ({ target }) => {\r\n        const { backgroundImage } = target.style;\r\n        const imageUrl = backgroundImage.slice(5, -2);\r\n        imageCardClickHandler(imageUrl);\r\n    };\r\n\r\n    return (\r\n        <div id={_id} className=\"place-card\">\r\n            <button onClick={onDeleteHandler} disabled={!isOwner} className=\"place-card__delete-icon\" />\r\n            <div className=\"place-card__image\"\r\n                style={{ backgroundImage: `url(${link})` }}\r\n                onClick={imageClickHandler}\r\n            ></div>\r\n            <div className=\"place-card__description\">\r\n                <h3 className=\"place-card__name\">{name}</h3>\r\n                <div>\r\n                    <button onClick={onLikeHandler}\r\n                        className={\r\n                            'place-card__like-icon' +\r\n                            `${isCurrUserLikeCard ? ' place-card__like-icon_liked' : ''}`\r\n                        }\r\n                    />\r\n                    <div className=\"place-card__like-counter\">{likes.length}</div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n});\r\n\r\nexport default PlaceCard;","import React from 'react';\r\nimport './popup/popup.css';\r\nimport closeIcon from '../../images/icon-close.svg';\r\n\r\nfunction PopupWithForm({ handleClosePopup, title, popupName, children }) {\r\n\r\n    const closeHandler = ({ target, currentTarget, keyCode }) => {\r\n        if (target.classList.contains('popup-close') || (target === currentTarget)) {\r\n            handleClosePopup();\r\n        };\r\n        const ESCAPE_KEYCODE = 27;\r\n        if (keyCode === ESCAPE_KEYCODE) {\r\n            handleClosePopup();\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div onClick={closeHandler} onKeyUp={closeHandler} className={`popup popup_type_${popupName} popup_is-opened`}>\r\n            <div className=\"popup__content\">\r\n                <img src={closeIcon} alt=\"Закрыть окно\" className=\"popup-close\" />\r\n                <h3 className=\"popup__title\">{title}</h3>\r\n                {children && children}\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import PopupWithForm from './PopupWithForm';\r\nexport default PopupWithForm;","import { EditProfilePopup } from './EditProfilePopup';\r\nexport default EditProfilePopup;","import React, { memo, useContext, useEffect, useState } from 'react';\r\nimport PopupWithForm from '../PopupWithForm';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\n\r\nexport const EditProfilePopup = memo(({ isEditProfileOpen, onEditProfilePopupToggle, onSubmitProfile }) => {\r\n    const { name, about } = useContext(CurrentUserContext);\r\n    const [profileName, setProfileName] = useState('');\r\n    const [profileAbout, setProfileAbout] = useState('');\r\n\r\n    useEffect(() => {\r\n        setProfileName(name);\r\n        setProfileAbout(about);\r\n    }, [name, about]);\r\n\r\n    const handleChangeName = ({ target }) => {\r\n        setProfileName(target.value);\r\n    };\r\n\r\n    const handleChangeAbout = ({ target }) => {\r\n        setProfileAbout(target.value)\r\n    };\r\n\r\n    const handleSubmitForm = (ev) => {\r\n        ev.preventDefault();\r\n        onSubmitProfile({\r\n            name: profileName,\r\n            about: profileAbout\r\n        });\r\n    };\r\n\r\n    return (\r\n        isEditProfileOpen && <PopupWithForm\r\n            handleClosePopup={onEditProfilePopupToggle}\r\n            popupName=\"edit-profile\"\r\n            title=\"Редактировать профиль\"\r\n            children={\r\n                <form onSubmit={handleSubmitForm} className=\"popup__form\" name=\"edit\">\r\n                    <div>\r\n                        <input required\r\n                            type=\"text\"\r\n                            name=\"name-profile\"\r\n                            className=\"popup__input popup-edit__input_type_name\"\r\n                            placeholder=\"Имя\"\r\n                            maxLength=\"30\"\r\n                            value={profileName}\r\n                            onChange={handleChangeName}\r\n                        />\r\n                        <span className={\"error-name-profile error-message\" +\r\n                            `${profileName.length < 2 ? ' error-message_active' : ''}`}\r\n                        >Длина имени должна быть не менее 2-х букв</span>\r\n                    </div>\r\n                    <div>\r\n                        <input required\r\n                            type=\"text\"\r\n                            name=\"about-profile\"\r\n                            className=\"popup__input popup-edit__input_type_about\"\r\n                            placeholder=\"О себе\"\r\n                            maxLength=\"30\"\r\n                            value={profileAbout}\r\n                            onChange={handleChangeAbout}\r\n                        />\r\n                        <span className={\"error-about-profile error-message\" +\r\n                            `${profileAbout.length < 1 ? ' error-message_active' : ''}`}\r\n                        >Длина текста должна быть не менее 1-го символа</span>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"button popup__button\" >Сохранить</button>\r\n                </form>\r\n            }\r\n        />\r\n    );\r\n});","import isUrl from 'validator/lib/isURL';\r\n\r\nconst validationOptions = {\r\n    require_protocol: true,\r\n};\r\n\r\nconst urlValidator = (urlString) => {\r\n    return isUrl(urlString, validationOptions);\r\n};\r\n\r\nexport default urlValidator;","import { AddPlacePopup } from './AddPlacePopup';\r\nexport default AddPlacePopup;","import React, { memo, useState } from 'react';\r\nimport PopupWithForm from '../PopupWithForm';\r\nimport urlValidator from '../../utils/urlValidator';\r\n\r\nexport const AddPlacePopup = memo(({\r\n    isAddPlacePopupOpen,\r\n    onAddPlacePopupToggle,\r\n    onSubmitPlace\r\n}) => {\r\n\r\n    const [placeName, setPlaceName] = useState('');\r\n    const [placeLink, setPlaceLink] = useState('');\r\n\r\n    const onChangePlaceName = ({ target }) => {\r\n        setPlaceName(target.value);\r\n    };\r\n\r\n    const onChangePlaceLink = ({ target }) => {\r\n        setPlaceLink(target.value);\r\n    };\r\n\r\n    const submitFormHandler = (e) => {\r\n        e.preventDefault();\r\n        isFormValidity && onSubmitPlace(placeName, placeLink);\r\n    };\r\n\r\n    const isFormValidity = placeName.length > 2 && urlValidator(placeLink);\r\n\r\n    return (\r\n        isAddPlacePopupOpen && <PopupWithForm\r\n            handleClosePopup={onAddPlacePopupToggle}\r\n            popupName=\"add-card\"\r\n            title=\"Новое место\"\r\n            children={\r\n                <form onSubmit={submitFormHandler} noValidate className=\"popup__form\" name=\"new\">\r\n                    <div>\r\n                        <input required\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            className=\"popup__input popup__input_type_name\"\r\n                            placeholder=\"Название\"\r\n                            minLength=\"2\"\r\n                            maxLength=\"30\"\r\n                            value={placeName}\r\n                            onChange={onChangePlaceName}\r\n                        />\r\n                        <span className=\"error-name error-message\"></span>\r\n                    </div>\r\n                    <div>\r\n                        <input required\r\n                            type=\"url\"\r\n                            name=\"link\"\r\n                            className=\"popup__input popup__input_type_link-url\"\r\n                            placeholder=\"Ссылка на картинку\"\r\n                            value={placeLink}\r\n                            onChange={onChangePlaceLink}\r\n                        />\r\n                        <span className=\"error-link error-message\"></span>\r\n                    </div>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"button popup__button\"\r\n                        disabled={!isFormValidity}\r\n                    >+</button>\r\n                </form>\r\n            }\r\n        />\r\n    );\r\n});","import { EditAvatarPopup } from './EditAvatarPopup';\r\nexport default EditAvatarPopup;","import React, { memo, useRef } from 'react';\r\nimport PopupWithForm from '../PopupWithForm';\r\n\r\nexport const EditAvatarPopup = memo(({ isEditAvatarPopupOpen, onEditAvatarPopupToggle, onSubmitAvatar }) => {\r\n\r\n    const avatarInput = useRef();\r\n    const submitButton = useRef();\r\n\r\n    const handleButtonEnabled = () => {\r\n        if (avatarInput.current.validity.valid) {\r\n            submitButton.current.removeAttribute('disabled');\r\n        } else {\r\n            submitButton.current.setAttribute('disabled', '');\r\n        };\r\n    };\r\n\r\n    const submitAvatarHandler = (ev) => {\r\n        ev.preventDefault();\r\n        onSubmitAvatar({\r\n            avatar: avatarInput.current.value\r\n        });\r\n    };\r\n\r\n    return (isEditAvatarPopupOpen && <PopupWithForm\r\n        handleClosePopup={onEditAvatarPopupToggle}\r\n        popupName=\"edit-avatar\"\r\n        title=\"Обновить аватар\"\r\n        children={\r\n            <form onSubmit={submitAvatarHandler} className=\"popup__form\" name=\"avatar\">\r\n                <div>\r\n                    <input ref={avatarInput} required\r\n                        type=\"url\"\r\n                        name=\"link\"\r\n                        className=\"popup__input popup__input_type_link-url\"\r\n                        placeholder=\"Ссылка на аватар\"\r\n                        onChange={handleButtonEnabled}\r\n                    />\r\n                    <span className=\"error-name error-message\"></span>\r\n                </div>\r\n                <button ref={submitButton} type=\"submit\" className=\"button popup__button\" disabled>Обновить аватар</button>\r\n            </form>\r\n        }\r\n    />)\r\n});","import { Main } from './Main';\r\nexport default Main;","import React, { memo, useContext } from 'react';\r\nimport './main/main.css';\r\nimport ImagePopup from '../ImagePopup';\r\nimport PlaceCard from '../PlaceCard';\r\nimport EditProfilePopup from '../EditProfilePopup';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\nimport AddPlacePopup from '../AddPlacePopup';\r\nimport EditAvatarPopup from '../EditAvatarPopup';\r\n\r\nexport const Main = memo(({\r\n    isAddPlacePopupOpen,\r\n    isEditAvatarPopupOpen,\r\n    isEditProfileOpen,\r\n    onAddPlacePopupToggle,\r\n    onEditAvatarPopupToggle,\r\n    onEditProfilePopupToggle,\r\n    onCardClick,\r\n    selectedImage,\r\n    submitProfile,\r\n    onSubmitAvatar,\r\n    cards,\r\n    onCardDelete,\r\n    onCardLike,\r\n    onSubmitPlace\r\n}) => {\r\n\r\n    const { name, about, avatar } = useContext(CurrentUserContext);\r\n\r\n    const onDeleteCard = (cardId) => {\r\n        onCardDelete(cardId);\r\n    };\r\n\r\n    const onLikeCard = (cardId, isLiked) => {\r\n        onCardLike(cardId, isLiked);\r\n    };\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            <section className=\"profile root__section\">\r\n                <div className=\"user-info\">\r\n                    <div style={{ backgroundImage: `url(${avatar})` }} onClick={onEditAvatarPopupToggle} className=\"user-info__photo\"></div>\r\n                    <div className=\"user-info__data\">\r\n                        <h1 className=\"user-info__name\">{name}</h1>\r\n                        <p className=\"user-info__job\">{about}</p>\r\n                        <button onClick={onEditProfilePopupToggle} className=\"button user-info__edit-button\">Edit</button>\r\n                    </div>\r\n                    <button onClick={onAddPlacePopupToggle} className=\"button user-info__button\">+</button>\r\n                </div>\r\n            </section>\r\n            <section className=\"places-list root__section\">\r\n                {\r\n                    cards.length &&\r\n                    cards.map((card) => {\r\n                        return (\r\n                            <PlaceCard key={card._id}\r\n                                cardData={card}\r\n                                imageCardClickHandler={onCardClick}\r\n                                likeHandler={onLikeCard}\r\n                                deleteHandler={onDeleteCard}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </section>\r\n            <section className=\"popup-container\">\r\n\r\n                {/* Попап фотографии карточки */}\r\n                {selectedImage && <ImagePopup\r\n                    handleClosePopup={onCardClick}\r\n                    selectedImage={selectedImage}\r\n                />}\r\n\r\n                {/* Попап редактирования профиля ↓ */}\r\n                <EditProfilePopup\r\n                    isEditProfileOpen={isEditProfileOpen}\r\n                    onEditProfilePopupToggle={onEditProfilePopupToggle}\r\n                    onSubmitProfile={submitProfile}\r\n                />\r\n\r\n                {/* Попап добавления карточки */}\r\n                <AddPlacePopup\r\n                    isAddPlacePopupOpen={isAddPlacePopupOpen}\r\n                    onAddPlacePopupToggle={onAddPlacePopupToggle}\r\n                    onSubmitPlace={onSubmitPlace}\r\n                />\r\n\r\n                {/* Попап обновления аватара */}\r\n                <EditAvatarPopup\r\n                    isEditAvatarPopupOpen={isEditAvatarPopupOpen}\r\n                    onEditAvatarPopupToggle={onEditAvatarPopupToggle}\r\n                    onSubmitAvatar={onSubmitAvatar}\r\n                />\r\n            </section>\r\n        </main>\r\n    );\r\n});","/**\r\n * Класс реализующий запросы на сервер\r\n */\r\n\r\nclass Api {\r\n    constructor(url, token) {\r\n        this.url = url;\r\n        this.token = token;\r\n    }\r\n\r\n    _getPromiseRes(res) {\r\n        if (res.ok) { return res.json(); }\r\n        return Promise.reject(res.status, res.text);\r\n    }\r\n\r\n    getInitialCards() {\r\n\r\n        return fetch(`${this.url}/cards`, {\r\n            headers: {\r\n                authorization: this.token,\r\n            }\r\n        })\r\n\r\n            .then(this._getPromiseRes)\r\n\r\n            .catch((err) => console.error(err));\r\n\r\n    }\r\n\r\n    getUserInfo() {\r\n\r\n        return fetch(`${this.url}/users/me`, {\r\n            headers: {\r\n                authorization: this.token,\r\n            }\r\n        })\r\n\r\n            .then(this._getPromiseRes)\r\n\r\n            .catch((err) => console.error(err));\r\n\r\n    }\r\n\r\n    updateUserInfo(name, about) {\r\n\r\n        return fetch(`${this.url}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this.token,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                about,\r\n            }),\r\n        })\r\n\r\n            .then(this._getPromiseRes)\r\n\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    updateUserAvatar(avatar) {\r\n\r\n        return fetch(`${this.url}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this.token,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                avatar\r\n            }),\r\n        })\r\n\r\n            .then(this._getPromiseRes)\r\n\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    postCard(name, link) {\r\n\r\n        return fetch(`${this.url}/cards`, {\r\n            method: 'POST',\r\n            headers: {\r\n                authorization: this.token,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                link,\r\n            }),\r\n        })\r\n\r\n            .then(this._getPromiseRes)\r\n\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n        return fetch(`${this.url}/cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: this.token\r\n            }\r\n        })\r\n\r\n            .then(this._getPromiseRes)\r\n\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    updateLike(cardId, isLikedNow) {\r\n        return fetch(`${this.url}/cards/like/${cardId}`, {\r\n            method: isLikedNow ? 'DELETE' : 'PUT',\r\n            headers: {\r\n                authorization: this.token\r\n            }\r\n        })\r\n\r\n            .then(this._getPromiseRes)\r\n\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n}\r\n\r\nconst MY_TOKEN = '87f8a436-5ee7-4266-9bfc-523daea2f9ff';\r\nconst SERVER_Url = 'https://nomoreparties.co/cohort4';\r\n\r\nconst api = new Api(SERVER_Url, MY_TOKEN);\r\n\r\nexport default api;\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './Main';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\n\nfunction App() {\n\n  const [isEditProfileOpen, setEditProfileOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [selectedCardImageUrl, setSelectedCardImage] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  // Первоначальное получение параметров карточек с сервера\n  useEffect(() => {\n    api\n      .getInitialCards()\n      .then(cardsFromApi => {\n        setCards(cardsFromApi);\n      })\n      .catch(err => console.error(err));\n  }, []);\n\n  // Первоначальное получение параметров пользователя с сервера\n  useEffect(() => {\n    api\n      .getUserInfo()\n      .then(({ avatar, name, about, _id }) => {\n        setCurrentUser((userData) => {\n          const newUserData = { ...userData, name, about, avatar, _id };\n          return newUserData;\n        });\n      })\n      .catch(err => console.error(err));\n  }, []);\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfileOpen(!isEditProfileOpen);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(!isAddPlacePopupOpen);\n  };\n\n  const handleCardClick = (imageUrl) => {\n    if (selectedCardImageUrl) {\n      setSelectedCardImage(null);\n      return;\n    };\n    setSelectedCardImage(imageUrl);\n  };\n\n  const submitProfileHandler = ({ name, about }) => {\n    api\n      .updateUserInfo(name, about)\n      .then(newUserData => {\n        setCurrentUser(newUserData);\n        handleEditProfileClick();\n      });\n  };\n\n  const submitAvatarHandler = ({ avatar }) => {\n    api\n      .updateUserAvatar(avatar)\n      .then(newUserData => {\n        setCurrentUser((currentUserData) => {\n          const userDataCopy = { ...currentUserData, avatar: newUserData.avatar };\n          return userDataCopy;\n        });\n        handleEditAvatarClick();\n      });\n  };\n\n  const deleteCardHandler = (cardId) => {\n    api\n      .deleteCard(cardId)\n      .then(() => {\n        setCards(cards => (\n          cards.filter(({ _id }) => _id !== cardId)\n        ));\n      });\n  };\n\n  const likeCardHandler = (cardId, isLiked) => {\n    api\n      .updateLike(cardId, isLiked)\n      .then(newCard => {\n        const newCardsArr = cards\n          .map(currCard => currCard._id === cardId ? newCard : currCard);\n        setCards(newCardsArr);\n      });\n  };\n\n  const submitPlaceHandler = (placeName, imageLink) => {\n    api\n      .postCard(placeName, imageLink)\n      .then(newCard => setCards([...cards, newCard]))\n      .then(() => handleAddPlaceClick());\n  };\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <Header />\n      <Main\n        isEditProfileOpen={isEditProfileOpen}\n        isAddPlacePopupOpen={isAddPlacePopupOpen}\n        isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n        onEditAvatarPopupToggle={handleEditAvatarClick}\n        onEditProfilePopupToggle={handleEditProfileClick}\n        onAddPlacePopupToggle={handleAddPlaceClick}\n        selectedImage={selectedCardImageUrl}\n        onCardClick={handleCardClick}\n        submitProfile={submitProfileHandler}\n        onSubmitAvatar={submitAvatarHandler}\n        onSubmitPlace={submitPlaceHandler}\n        onCardDelete={deleteCardHandler}\n        onCardLike={likeCardHandler}\n        cards={cards}\n      />\n      <Footer />\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('.root')\n);\n"],"sourceRoot":""}