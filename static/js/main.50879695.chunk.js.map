{"version":3,"sources":["images/icon-close.svg","images/logo.svg","components/Header/Header.js","components/Header/index.js","components/Footer/Footer.js","components/Footer/index.js","components/ImagePopup/ImagePopup.js","components/ImagePopup/index.js","components/PopupWithForm/PopupWithForm.js","components/PopupWithForm/index.js","contexts/CurrentUserContext.js","components/PlaceCard/index.js","components/PlaceCard/PlaceCard.js","components/EditProfilePopup/index.js","components/EditProfilePopup/EditProfilePopup.js","utils/api.js","components/EditAvatarPopup/EditAvatarPopup.js","components/Main/index.js","components/Main/Main.js","components/App.js","index.js"],"names":["module","exports","Header","className","src","mestoLogo","alt","Footer","ImagePopup","handleClosePopup","selectedImage","onClick","target","keyCode","classList","contains","closeIcon","PopupWithForm","title","popupName","children","closeHandler","currentTarget","onKeyUp","CurrentUserContext","createContext","PlaceCard","memo","cardData","name","likes","link","_id","owner","imageCardClickHandler","deleteHandler","likeHandler","currentUser","useContext","isOwner","isCurrUserLikeCard","some","whoLiked","id","disabled","style","backgroundImage","imageUrl","slice","length","EditProfilePopup","isEditProfileOpen","onEditProfilePopupToggle","onSubmitProfile","about","useState","profileName","setProfileName","profileAbout","setProfileAbout","useEffect","onSubmit","ev","preventDefault","required","type","placeholder","maxLength","value","onChange","api","url","token","this","res","ok","json","Promise","reject","status","text","fetch","headers","authorization","then","_getPromiseRes","catch","err","console","error","method","body","JSON","stringify","avatar","cardId","isLikedNow","EditAvatarPopup","isEditAvatarPopupOpen","onEditAvatarPopupToggle","onSubmitAvatar","avatarInput","useRef","submitButton","current","ref","validity","valid","removeAttribute","setAttribute","Main","isAddPlacePopupOpen","onAddPlacePopupToggle","onCardClick","submitProfile","cards","setCards","getInitialCards","cardsFromApi","onDeleteCard","deleteCard","filter","onLikeCard","isLiked","updateLike","newCard","newCardsArr","map","currCard","card","key","noValidate","minLength","App","setEditProfileOpen","setAddPlacePopupOpen","setEditAvatarPopupOpen","selectedCardImageUrl","setSelectedCardImage","setCurrentUser","getUserInfo","userData","handleEditAvatarClick","handleEditProfileClick","Provider","updateUserInfo","newUserData","updateUserAvatar","currentUserData","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,wC,kBCA3CD,EAAOC,QAAU,IAA0B,kC,mTCY5BC,ICXAA,EDGf,WACI,OACI,4BAAQC,UAAU,wBACd,yBAAKC,IAAKC,IAAWC,IAAI,mDAAgBH,UAAU,W,MEIhDI,ICVAA,EDEf,WACI,OACI,4BAAQJ,UAAU,UACd,uBAAGA,UAAU,gBAAb,kC,8BEaGK,IClBAA,EDGf,YAA0D,IAApCC,EAAmC,EAAnCA,iBAAkBC,EAAiB,EAAjBA,cAKpC,OACI,yBAAKC,QALT,YAAiD,IAApBC,EAAmB,EAAnBA,OAAmB,EAAXC,SAChCD,EAAOE,UAAUC,SAAS,uBAAyBN,KAInBN,UAAU,0CACvC,yBAAKA,UAAU,wBACX,yBAAKC,IAAKY,IAAWV,IAAI,sEAAeH,UAAU,gBAClD,yBAAKC,IAAKM,EAAeP,UAAU,qBAAqBG,IAAI,yG,MEc7DW,IC1BAA,EDGf,YAA0E,IAAjDR,EAAgD,EAAhDA,iBAAkBS,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,SAEnDC,EAAe,SAAC,GAAwC,IAAtCT,EAAqC,EAArCA,OAAQU,EAA6B,EAA7BA,cAAeT,EAAc,EAAdA,SACvCD,EAAOE,UAAUC,SAAS,gBAAmBH,IAAWU,IACxDb,IAEmB,KACnBI,GACAJ,KAIR,OACI,yBAAKE,QAASU,EAAcE,QAASF,EAAclB,UAAS,2BAAsBgB,EAAtB,qBACxD,yBAAKhB,UAAU,kBACX,yBAAKC,IAAKY,IAAWV,IAAI,sEAAeH,UAAU,gBAClD,wBAAIA,UAAU,gBAAgBe,GAC7BE,GAAYA,KEnBdI,EADYC,0BCAZC,G,MCGGC,gBAAK,YAKhB,IAAD,IAJFC,SAAYC,EAIV,EAJUA,KAAMC,EAIhB,EAJgBA,MAAOC,EAIvB,EAJuBA,KAAMC,EAI7B,EAJ6BA,IAAKC,EAIlC,EAJkCA,MACpCC,EAGE,EAHFA,sBACAC,EAEE,EAFFA,cACAC,EACE,EADFA,YAEMC,EAAcC,qBAAWd,GACzBe,EAAUF,EAAYL,MAAQC,EAAMD,IACpCQ,EAAqBV,EAAMW,MAAK,SAAAC,GAAQ,OAAIA,EAASV,MAAQK,EAAYL,OAU/E,OACI,yBAAKW,GAAIX,EAAK7B,UAAU,cACpB,4BAAQQ,QANQ,WACpB4B,GAAWJ,EAAcH,IAKaY,UAAWL,EAASpC,UAAU,4BAChE,yBAAKA,UAAU,oBACX0C,MAAO,CAAEC,gBAAgB,OAAD,OAASf,EAAT,MACxBpB,QAAS,YAAiB,IAEhBoC,EAFe,EAAbnC,OAC2BiC,MAA3BC,gBACyBE,MAAM,GAAI,GAC3Cd,EAAsBa,MAG9B,yBAAK5C,UAAU,2BACX,wBAAIA,UAAU,oBAAoB0B,GAClC,6BACI,4BAAQlB,QAtBF,WAClByB,EAAYJ,EAAKQ,IAsBDrC,UACI,kCACGqC,EAAqB,+BAAiC,MAGjE,yBAAKrC,UAAU,4BAA4B2B,EAAMmB,eCzCtDC,ECGiBvB,gBAAK,YAAuE,IAApEwB,EAAmE,EAAnEA,kBAAmBC,EAAgD,EAAhDA,yBAA0BC,EAAsB,EAAtBA,gBAAsB,EAC/Ef,qBAAWd,GAA3BK,EAD+F,EAC/FA,KAAMyB,EADyF,EACzFA,MADyF,EAEjEC,mBAAS,IAFwD,mBAEhGC,EAFgG,KAEnFC,EAFmF,OAG/DF,mBAAS,IAHsD,mBAGhGG,EAHgG,KAGlFC,EAHkF,KAKvGC,qBAAU,WACNH,EAAe5B,GACf8B,EAAgBL,KACjB,CAACzB,EAAMyB,IAkBV,OACIH,GAAqB,kBAAC,EAAD,CACjB1C,iBAAkB2C,EAClBjC,UAAU,eACVD,MAAM,4HACNE,SACI,0BAAMyC,SAdO,SAACC,GACtBA,EAAGC,iBACHV,EAAgB,CACZxB,KAAM2B,EACNF,MAAOI,KAU+BvD,UAAU,cAAc0B,KAAK,QAC3D,6BACI,2BAAOmC,UAAQ,EACXC,KAAK,OACLpC,KAAK,eACL1B,UAAU,2CACV+D,YAAY,qBACZC,UAAU,KACVC,MAAOZ,EACPa,SA/BC,SAAC,GAAgB,IAAdzD,EAAa,EAAbA,OACxB6C,EAAe7C,EAAOwD,UAgCN,0BAAMjE,UAAW,6CACVqD,EAAYP,OAAS,EAAI,wBAA0B,KAD1D,8MAIJ,6BACI,2BAAOe,UAAQ,EACXC,KAAK,OACLpC,KAAK,gBACL1B,UAAU,4CACV+D,YAAY,kCACZC,UAAU,KACVC,MAAOV,EACPW,SAzCE,SAAC,GAAgB,IAAdzD,EAAa,EAAbA,OACzB+C,EAAgB/C,EAAOwD,UA0CP,0BAAMjE,UAAW,8CACVuD,EAAaT,OAAS,EAAI,wBAA0B,KAD3D,4OAIJ,4BAAQgB,KAAK,SAAS9D,UAAU,wBAAhC,gE,cC4ELmE,EAFH,I,WAtIR,WAAYC,EAAKC,GAAQ,oBACrBC,KAAKF,IAAMA,EACXE,KAAKD,MAAQA,E,2DAGFE,GACX,OAAIA,EAAIC,GAAaD,EAAIE,OAClBC,QAAQC,OAAOJ,EAAIK,OAAQL,EAAIM,Q,wCAKtC,OAAOC,MAAM,GAAD,OAAIR,KAAKF,IAAT,UAAsB,CAC9BW,QAAS,CACLC,cAAeV,KAAKD,SAIvBY,KAAKX,KAAKY,gBAEVC,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,Q,oCAMlC,OAAON,MAAM,GAAD,OAAIR,KAAKF,IAAT,aAAyB,CACjCW,QAAS,CACLC,cAAeV,KAAKD,SAIvBY,KAAKX,KAAKY,gBAEVC,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,Q,qCAIvB1D,EAAMyB,GAEjB,OAAO2B,MAAM,GAAD,OAAIR,KAAKF,IAAT,aAAyB,CACjCmB,OAAQ,QACRR,QAAS,CACLC,cAAeV,KAAKD,MACpB,eAAgB,oBAEpBmB,KAAMC,KAAKC,UAAU,CACjBhE,OACAyB,YAIH8B,KAAKX,KAAKY,gBAEVC,OAAM,SAACC,GACJC,QAAQC,MAAMF,Q,uCAITO,GAEb,OAAOb,MAAM,GAAD,OAAIR,KAAKF,IAAT,oBAAgC,CACxCmB,OAAQ,QACRR,QAAS,CACLC,cAAeV,KAAKD,MACpB,eAAgB,oBAEpBmB,KAAMC,KAAKC,UAAU,CACjBC,aAIHV,KAAKX,KAAKY,gBAEVC,OAAM,SAACC,GACJC,QAAQC,MAAMF,Q,+BAIjB1D,EAAME,GAEX,OAAOkD,MAAM,GAAD,OAAIR,KAAKF,IAAT,UAAsB,CAC9BmB,OAAQ,OACRR,QAAS,CACLC,cAAeV,KAAKD,MACpB,eAAgB,oBAEpBmB,KAAMC,KAAKC,UAAU,CACjBhE,OACAE,WAIHqD,KAAKX,KAAKY,gBAEVC,OAAM,SAACC,GACJC,QAAQC,MAAMF,Q,iCAIfQ,GACP,OAAOd,MAAM,GAAD,OAAIR,KAAKF,IAAT,kBAAsBwB,GAAU,CACxCL,OAAQ,SACRR,QAAS,CACLC,cAAeV,KAAKD,SAIvBY,KAAKX,KAAKY,gBAEVC,OAAM,SAACC,GACJC,QAAQC,MAAMF,Q,iCAIfQ,EAAQC,GACf,OAAOf,MAAM,GAAD,OAAIR,KAAKF,IAAT,uBAA2BwB,GAAU,CAC7CL,OAAQM,EAAa,SAAW,MAChCd,QAAS,CACLC,cAAeV,KAAKD,SAIvBY,KAAKX,KAAKY,gBAEVC,OAAM,SAACC,GACJC,QAAQC,MAAMF,U,KAQlB,CAFO,mCADF,wCCrIJU,EAAkBtE,gBAAK,YAAyE,IAAtEuE,EAAqE,EAArEA,sBAAuBC,EAA8C,EAA9CA,wBAAyBC,EAAqB,EAArBA,eAE7EC,EAAcC,mBACdC,EAAeD,mBAiBrB,OAAQJ,GAAyB,kBAAC,EAAD,CAC7BzF,iBAAkB0F,EAClBhF,UAAU,cACVD,MAAM,wFACNE,SACI,0BAAMyC,SAZc,SAACC,GACzBA,EAAGC,iBACHqC,EAAe,CACXN,OAAQO,EAAYG,QAAQpC,SASSjE,UAAU,cAAc0B,KAAK,UAC9D,6BACI,2BAAO4E,IAAKJ,EAAarC,UAAQ,EAC7BC,KAAK,MACLpC,KAAK,OACL1B,UAAU,0CACV+D,YAAY,yFACZG,SA3BQ,WACpBgC,EAAYG,QAAQE,SAASC,MAC7BJ,EAAaC,QAAQI,gBAAgB,YAErCL,EAAaC,QAAQK,aAAa,WAAY,OAyBtC,0BAAM1G,UAAU,8BAEpB,4BAAQsG,IAAKF,EAActC,KAAK,SAAS9D,UAAU,uBAAuByC,UAAQ,GAAlF,+FCtCDkE,ECSFnF,gBAAK,YAWX,IAVHoF,EAUE,EAVFA,oBACAb,EASE,EATFA,sBACA/C,EAQE,EARFA,kBACA6D,EAOE,EAPFA,sBACAb,EAME,EANFA,wBACA/C,EAKE,EALFA,yBACA6D,EAIE,EAJFA,YACAvG,EAGE,EAHFA,cACAwG,EAEE,EAFFA,cACAd,EACE,EADFA,eACE,EAEwB7C,mBAAS,IAFjC,mBAEK4D,EAFL,KAEYC,EAFZ,OAG8B9E,qBAAWd,GAAnCK,EAHN,EAGMA,KAAMyB,EAHZ,EAGYA,MAAOwC,EAHnB,EAGmBA,OAErBlC,qBAAU,WACNU,EACK+C,kBACAjC,MAAK,SAAAkC,GACFF,EAASE,MAEZhC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,QACjC,IAEH,IAAMgC,EAAe,SAACxB,GAClBzB,EACKkD,WAAWzB,GACXX,MAAK,WACFgC,GAAS,SAAAD,GAAK,OACVA,EAAMM,QAAO,qBAAGzF,MAAkB+D,YAK5C2B,EAAa,SAAC3B,EAAQ4B,GACxBrD,EACKsD,WAAW7B,EAAQ4B,GACnBvC,MAAK,SAAAyC,GACF,IAAMC,EAAcX,EACfY,KAAI,SAAAC,GAAQ,OAAIA,EAAShG,MAAQ+D,EAAS8B,EAAUG,KACzDZ,EAASU,OAIrB,OACI,0BAAM3H,UAAU,QACZ,6BAASA,UAAU,yBACf,yBAAKA,UAAU,aACX,yBAAK0C,MAAO,CAAEC,gBAAgB,OAAD,OAASgD,EAAT,MAAsBnF,QAASwF,EAAyBhG,UAAU,qBAC/F,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,mBAAmB0B,GACjC,uBAAG1B,UAAU,kBAAkBmD,GAC/B,4BAAQ3C,QAASyC,EAA0BjD,UAAU,iCAArD,SAEJ,4BAAQQ,QAASqG,EAAuB7G,UAAU,4BAAlD,OAGR,6BAASA,UAAU,6BAEXgH,EAAMlE,QACNkE,EAAMY,KAAI,SAACE,GACP,OACI,kBAAC,EAAD,CAAWC,IAAKD,EAAKjG,IACjBJ,SAAUqG,EACV/F,sBAAuB+E,EACvB7E,YAAasF,EACbvF,cAAeoF,QAMnC,6BAASpH,UAAU,mBAGdO,GAAiB,kBAAC,EAAD,CACdD,iBAAkBwG,EAClBvG,cAAeA,IAInB,kBAAC,EAAD,CACIyC,kBAAmBA,EACnBC,yBAA0BA,EAC1BC,gBAAiB6D,IAIpBH,GAAuB,kBAAC,EAAD,CACpBtG,iBAAkBuG,EAClB7F,UAAU,WACVD,MAAM,gEACNE,SACI,0BAAM+G,YAAU,EAAChI,UAAU,cAAc0B,KAAK,OAC1C,6BACI,2BAAOmC,UAAQ,EACXC,KAAK,OACLpC,KAAK,OACL1B,UAAU,sCACV+D,YAAY,mDACZkE,UAAU,IACVjE,UAAU,OAEd,0BAAMhE,UAAU,8BAEpB,6BACI,2BAAO6D,UAAQ,EACXC,KAAK,MACLpC,KAAK,OACL1B,UAAU,0CACV+D,YAAY,uGAEhB,0BAAM/D,UAAU,8BAEpB,4BAAQ8D,KAAK,SAAS9D,UAAU,uBAAuByC,UAAQ,GAA/D,QAMZ,kBAACqD,EAAD,CACIC,sBAAuBA,EACvBC,wBAAyBA,EACzBC,eAAgBA,SC7CrBiC,MAjFf,WAAgB,IAAD,EAEmC9E,oBAAS,GAF5C,mBAENJ,EAFM,KAEamF,EAFb,OAGuC/E,oBAAS,GAHhD,mBAGNwD,EAHM,KAGewB,EAHf,OAI2ChF,oBAAS,GAJpD,mBAIN2C,EAJM,KAIiBsC,EAJjB,OAKwCjF,mBAAS,MALjD,mBAKNkF,EALM,KAKgBC,EALhB,OAMyBnF,mBAAS,IANlC,mBAMNlB,EANM,KAMOsG,EANP,KAQb/E,qBAAU,WACRU,EACGsE,cACAxD,MAAK,YAAmC,IAAhCU,EAA+B,EAA/BA,OAAQjE,EAAuB,EAAvBA,KAAMyB,EAAiB,EAAjBA,MAAOtB,EAAU,EAAVA,IAC5B2G,GAAe,SAACE,GAEd,OADiB,2BAAQA,GAAR,IAAkBhH,OAAMyB,QAAOwC,SAAQ9D,cAI3DsD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,QAC7B,IAEH,IAAMuD,EAAwB,WAC5BN,GAAwBtC,IAGpB6C,EAAyB,WAC7BT,GAAoBnF,IAoCtB,OACE,kBAAC,EAAmB6F,SAApB,CAA6B5E,MAAO/B,GAClC,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEc,kBAAmBA,EACnB4D,oBAAqBA,EACrBb,sBAAuBA,EACvBC,wBAAyB2C,EACzB1F,yBAA0B2F,EAC1B/B,sBA1CsB,WAC1BuB,GAAsBxB,IA0ClBrG,cAAe+H,EACfxB,YAxCkB,SAAClE,GAErB2F,EADED,EACmB,KAGF1F,IAoCjBmE,cAjCuB,SAAC,GAAqB,IAAnBrF,EAAkB,EAAlBA,KAAMyB,EAAY,EAAZA,MACpCgB,EACG2E,eAAepH,EAAMyB,GACrB8B,MAAK,SAAA8D,GACJP,EAAeO,GACfH,QA6BA3C,eAzBsB,SAAC,GAAgB,IAAdN,EAAa,EAAbA,OAC7BxB,EACG6E,iBAAiBrD,GACjBV,MAAK,SAAA8D,GACJP,GAAe,SAACS,GAEd,OADkB,2BAAQA,GAAR,IAAyBtD,OAAQoD,EAAYpD,YAGjEgD,UAmBF,kBAAC,EAAD,QC/ENO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.50879695.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-close.a3e3d9bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.9d0e3a93.svg\";","import React from 'react';\r\nimport './header.css';\r\nimport mestoLogo from '../../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header root__section\">\r\n            <img src={mestoLogo} alt=\"Mesto логотип\" className=\"logo\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import Header from './Header';\r\nexport default Header;","import React from 'react';\r\nimport './footer/footer.css';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__text\">Mesto Russia by NDI &copy;2020</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import Footer from './Footer';\r\nexport default Footer;","import React from 'react';\r\nimport './popup-image/popup-image.css';\r\nimport closeIcon from '../../images/icon-close.svg';\r\n\r\nfunction ImagePopup({ handleClosePopup, selectedImage }) {\r\n    function popupCloseHandler({ target, keyCode }) {\r\n        !target.classList.contains('popup-image__image') && handleClosePopup();\r\n    };\r\n\r\n    return (\r\n        <div onClick={popupCloseHandler} className=\"popup popup_type_image popup_is-opened\">\r\n            <div className=\"popup-image__content\">\r\n                <img src={closeIcon} alt=\"Закрыть окно\" className=\"popup-close\" />\r\n                <img src={selectedImage} className=\"popup-image__image\" alt=\"Картинка карточки\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","import ImagePopup from './ImagePopup';\r\nexport default ImagePopup;","import React from 'react';\r\nimport './popup/popup.css';\r\nimport closeIcon from '../../images/icon-close.svg';\r\n\r\nfunction PopupWithForm({ handleClosePopup, title, popupName, children }) {\r\n\r\n    const closeHandler = ({ target, currentTarget, keyCode }) => {\r\n        if (target.classList.contains('popup-close') || (target === currentTarget)) {\r\n            handleClosePopup();\r\n        };\r\n        const ESCAPE_KEYCODE = 27;\r\n        if (keyCode === ESCAPE_KEYCODE) {\r\n            handleClosePopup();\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div onClick={closeHandler} onKeyUp={closeHandler} className={`popup popup_type_${popupName} popup_is-opened`}>\r\n            <div className=\"popup__content\">\r\n                <img src={closeIcon} alt=\"Закрыть окно\" className=\"popup-close\" />\r\n                <h3 className=\"popup__title\">{title}</h3>\r\n                {children && children}\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import PopupWithForm from './PopupWithForm';\r\nexport default PopupWithForm;","import { createContext } from 'react';\r\nconst CurrentUserContext = createContext();\r\nexport default CurrentUserContext;","import PlaceCard from './PlaceCard';\r\nexport default PlaceCard;","import React, { memo, useContext } from 'react';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\nimport './place-card/place-card.css';\r\n\r\nconst PlaceCard = memo(({\r\n    cardData: { name, likes, link, _id, owner },\r\n    imageCardClickHandler,\r\n    deleteHandler,\r\n    likeHandler\r\n}) => {\r\n    const currentUser = useContext(CurrentUserContext);\r\n    const isOwner = currentUser._id === owner._id;\r\n    const isCurrUserLikeCard = likes.some(whoLiked => whoLiked._id === currentUser._id);\r\n\r\n    const onLikeHandler = () => {\r\n        likeHandler(_id, isCurrUserLikeCard);\r\n    };\r\n\r\n    const onDeleteHandler = () => {\r\n        isOwner && deleteHandler(_id);\r\n    };\r\n\r\n    return (\r\n        <div id={_id} className=\"place-card\">\r\n            <button onClick={onDeleteHandler} disabled={!isOwner} className=\"place-card__delete-icon\" />\r\n            <div className=\"place-card__image\"\r\n                style={{ backgroundImage: `url(${link})` }}\r\n                onClick={({ target }) => {\r\n                    const { backgroundImage } = target.style;\r\n                    const imageUrl = backgroundImage.slice(5, -2);\r\n                    imageCardClickHandler(imageUrl);\r\n                }}\r\n            ></div>\r\n            <div className=\"place-card__description\">\r\n                <h3 className=\"place-card__name\">{name}</h3>\r\n                <div>\r\n                    <button onClick={onLikeHandler}\r\n                        className={\r\n                            'place-card__like-icon' +\r\n                            `${isCurrUserLikeCard ? ' place-card__like-icon_liked' : ''}`\r\n                        }\r\n                    />\r\n                    <div className=\"place-card__like-counter\">{likes.length}</div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n});\r\n\r\nexport default PlaceCard;","import { EditProfilePopup } from './EditProfilePopup';\r\nexport default EditProfilePopup;","import React, { memo, useContext, useEffect, useState } from 'react';\r\nimport PopupWithForm from '../PopupWithForm';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\n\r\nexport const EditProfilePopup = memo(({ isEditProfileOpen, onEditProfilePopupToggle, onSubmitProfile }) => {\r\n    const { name, about } = useContext(CurrentUserContext);\r\n    const [profileName, setProfileName] = useState('');\r\n    const [profileAbout, setProfileAbout] = useState('');\r\n\r\n    useEffect(() => {\r\n        setProfileName(name);\r\n        setProfileAbout(about);\r\n    }, [name, about]);\r\n\r\n    const handleChangeName = ({ target }) => {\r\n        setProfileName(target.value);\r\n    };\r\n\r\n    const handleChangeAbout = ({ target }) => {\r\n        setProfileAbout(target.value)\r\n    };\r\n\r\n    const handleSubmitForm = (ev) => {\r\n        ev.preventDefault();\r\n        onSubmitProfile({\r\n            name: profileName,\r\n            about: profileAbout\r\n        });\r\n    };\r\n\r\n    return (\r\n        isEditProfileOpen && <PopupWithForm\r\n            handleClosePopup={onEditProfilePopupToggle}\r\n            popupName=\"edit-profile\"\r\n            title=\"Редактировать профиль\"\r\n            children={\r\n                <form onSubmit={handleSubmitForm} className=\"popup__form\" name=\"edit\">\r\n                    <div>\r\n                        <input required\r\n                            type=\"text\"\r\n                            name=\"name-profile\"\r\n                            className=\"popup__input popup-edit__input_type_name\"\r\n                            placeholder=\"Имя\"\r\n                            maxLength=\"30\"\r\n                            value={profileName}\r\n                            onChange={handleChangeName}\r\n                        />\r\n                        <span className={\"error-name-profile error-message\" +\r\n                            `${profileName.length < 2 ? ' error-message_active' : ''}`}\r\n                        >Длина имени должна быть не менее 2-х букв</span>\r\n                    </div>\r\n                    <div>\r\n                        <input required\r\n                            type=\"text\"\r\n                            name=\"about-profile\"\r\n                            className=\"popup__input popup-edit__input_type_about\"\r\n                            placeholder=\"О себе\"\r\n                            maxLength=\"30\"\r\n                            value={profileAbout}\r\n                            onChange={handleChangeAbout}\r\n                        />\r\n                        <span className={\"error-about-profile error-message\" +\r\n                            `${profileAbout.length < 1 ? ' error-message_active' : ''}`}\r\n                        >Длина текста должна быть не менее 1-го символа</span>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"button popup__button\" >Сохранить</button>\r\n                </form>\r\n            }\r\n        />\r\n    );\r\n});","/**\r\n * Класс реализующий запросы на сервер\r\n */\r\n\r\nclass Api {\r\n    constructor(url, token) {\r\n        this.url = url;\r\n        this.token = token;\r\n    }\r\n\r\n    _getPromiseRes(res) {\r\n        if (res.ok) { return res.json(); }\r\n        return Promise.reject(res.status, res.text);\r\n    }\r\n\r\n    getInitialCards() {\r\n\r\n        return fetch(`${this.url}/cards`, {\r\n            headers: {\r\n                authorization: this.token,\r\n            }\r\n        })\r\n\r\n            .then(this._getPromiseRes)\r\n\r\n            .catch((err) => console.error(err));\r\n\r\n    }\r\n\r\n    getUserInfo() {\r\n\r\n        return fetch(`${this.url}/users/me`, {\r\n            headers: {\r\n                authorization: this.token,\r\n            }\r\n        })\r\n\r\n            .then(this._getPromiseRes)\r\n\r\n            .catch((err) => console.error(err));\r\n\r\n    }\r\n\r\n    updateUserInfo(name, about) {\r\n\r\n        return fetch(`${this.url}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this.token,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                about,\r\n            }),\r\n        })\r\n\r\n            .then(this._getPromiseRes)\r\n\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    updateUserAvatar(avatar) {\r\n\r\n        return fetch(`${this.url}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this.token,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                avatar\r\n            }),\r\n        })\r\n\r\n            .then(this._getPromiseRes)\r\n\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    postCard(name, link) {\r\n\r\n        return fetch(`${this.url}/cards`, {\r\n            method: 'POST',\r\n            headers: {\r\n                authorization: this.token,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                link,\r\n            }),\r\n        })\r\n\r\n            .then(this._getPromiseRes)\r\n\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n        return fetch(`${this.url}/cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: this.token\r\n            }\r\n        })\r\n\r\n            .then(this._getPromiseRes)\r\n\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    updateLike(cardId, isLikedNow) {\r\n        return fetch(`${this.url}/cards/like/${cardId}`, {\r\n            method: isLikedNow ? 'DELETE' : 'PUT',\r\n            headers: {\r\n                authorization: this.token\r\n            }\r\n        })\r\n\r\n            .then(this._getPromiseRes)\r\n\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n}\r\n\r\nconst MY_TOKEN = '87f8a436-5ee7-4266-9bfc-523daea2f9ff';\r\nconst SERVER_Url = 'https://nomoreparties.co/cohort4';\r\n\r\nconst api = new Api(SERVER_Url, MY_TOKEN);\r\n\r\nexport default api;\r\n\r\n\r\n\r\n","import React, { memo, useRef } from 'react';\r\nimport PopupWithForm from '../PopupWithForm';\r\n\r\nexport const EditAvatarPopup = memo(({ isEditAvatarPopupOpen, onEditAvatarPopupToggle, onSubmitAvatar }) => {\r\n\r\n    const avatarInput = useRef();\r\n    const submitButton = useRef();\r\n\r\n    const handleButtonEnabled = () => {\r\n        if (avatarInput.current.validity.valid) {\r\n            submitButton.current.removeAttribute('disabled');\r\n        } else {\r\n            submitButton.current.setAttribute('disabled', '');\r\n        };\r\n    };\r\n\r\n    const submitAvatarHandler = (ev) => {\r\n        ev.preventDefault();\r\n        onSubmitAvatar({\r\n            avatar: avatarInput.current.value\r\n        });\r\n    };\r\n\r\n    return (isEditAvatarPopupOpen && <PopupWithForm\r\n        handleClosePopup={onEditAvatarPopupToggle}\r\n        popupName=\"edit-avatar\"\r\n        title=\"Обновить аватар\"\r\n        children={\r\n            <form onSubmit={submitAvatarHandler} className=\"popup__form\" name=\"avatar\">\r\n                <div>\r\n                    <input ref={avatarInput} required\r\n                        type=\"url\"\r\n                        name=\"link\"\r\n                        className=\"popup__input popup__input_type_link-url\"\r\n                        placeholder=\"Ссылка на аватар\"\r\n                        onChange={handleButtonEnabled}\r\n                    />\r\n                    <span className=\"error-name error-message\"></span>\r\n                </div>\r\n                <button ref={submitButton} type=\"submit\" className=\"button popup__button\" disabled>Обновить аватар</button>\r\n            </form>\r\n        }\r\n    />)\r\n});","import Main from './Main';\r\nexport default Main;","import React, { memo, useState, useEffect, useContext } from 'react';\r\nimport './main/main.css';\r\nimport ImagePopup from '../ImagePopup';\r\nimport PopupWithForm from '../PopupWithForm';\r\nimport PlaceCard from '../PlaceCard';\r\nimport EditProfilePopup from '../EditProfilePopup';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\nimport api from '../../utils/api';\r\nimport { EditAvatarPopup } from '../EditAvatarPopup/EditAvatarPopup';\r\n\r\nconst Main = memo(({\r\n    isAddPlacePopupOpen,\r\n    isEditAvatarPopupOpen,\r\n    isEditProfileOpen,\r\n    onAddPlacePopupToggle,\r\n    onEditAvatarPopupToggle,\r\n    onEditProfilePopupToggle,\r\n    onCardClick,\r\n    selectedImage,\r\n    submitProfile,\r\n    onSubmitAvatar\r\n}) => {\r\n\r\n    const [cards, setCards] = useState([]);\r\n    const { name, about, avatar } = useContext(CurrentUserContext);\r\n\r\n    useEffect(() => {\r\n        api\r\n            .getInitialCards()\r\n            .then(cardsFromApi => {\r\n                setCards(cardsFromApi);\r\n            })\r\n            .catch(err => console.error(err));\r\n    }, []);\r\n\r\n    const onDeleteCard = (cardId) => {\r\n        api\r\n            .deleteCard(cardId)\r\n            .then(() => {\r\n                setCards(cards => (\r\n                    cards.filter(({ _id }) => _id !== cardId)\r\n                ));\r\n            });\r\n    };\r\n\r\n    const onLikeCard = (cardId, isLiked) => {\r\n        api\r\n            .updateLike(cardId, isLiked)\r\n            .then(newCard => {\r\n                const newCardsArr = cards\r\n                    .map(currCard => currCard._id === cardId ? newCard : currCard);\r\n                setCards(newCardsArr);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            <section className=\"profile root__section\">\r\n                <div className=\"user-info\">\r\n                    <div style={{ backgroundImage: `url(${avatar})` }} onClick={onEditAvatarPopupToggle} className=\"user-info__photo\"></div>\r\n                    <div className=\"user-info__data\">\r\n                        <h1 className=\"user-info__name\">{name}</h1>\r\n                        <p className=\"user-info__job\">{about}</p>\r\n                        <button onClick={onEditProfilePopupToggle} className=\"button user-info__edit-button\">Edit</button>\r\n                    </div>\r\n                    <button onClick={onAddPlacePopupToggle} className=\"button user-info__button\">+</button>\r\n                </div>\r\n            </section>\r\n            <section className=\"places-list root__section\">\r\n                {\r\n                    cards.length &&\r\n                    cards.map((card) => {\r\n                        return (\r\n                            <PlaceCard key={card._id}\r\n                                cardData={card}\r\n                                imageCardClickHandler={onCardClick}\r\n                                likeHandler={onLikeCard}\r\n                                deleteHandler={onDeleteCard}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </section>\r\n            <section className=\"popup-container\">\r\n\r\n                {/* Попап фотографии карточки */}\r\n                {selectedImage && <ImagePopup\r\n                    handleClosePopup={onCardClick}\r\n                    selectedImage={selectedImage}\r\n                />}\r\n\r\n                {/* Попап редактирования профиля ↓ */}\r\n                <EditProfilePopup\r\n                    isEditProfileOpen={isEditProfileOpen}\r\n                    onEditProfilePopupToggle={onEditProfilePopupToggle}\r\n                    onSubmitProfile={submitProfile}\r\n                />\r\n\r\n                {/* Попап добавления карточки */}\r\n                {isAddPlacePopupOpen && <PopupWithForm\r\n                    handleClosePopup={onAddPlacePopupToggle}\r\n                    popupName=\"add-card\"\r\n                    title=\"Новое место\"\r\n                    children={\r\n                        <form noValidate className=\"popup__form\" name=\"new\">\r\n                            <div>\r\n                                <input required\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    className=\"popup__input popup__input_type_name\"\r\n                                    placeholder=\"Название\"\r\n                                    minLength=\"2\"\r\n                                    maxLength=\"30\"\r\n                                />\r\n                                <span className=\"error-name error-message\"></span>\r\n                            </div>\r\n                            <div>\r\n                                <input required\r\n                                    type=\"url\"\r\n                                    name=\"link\"\r\n                                    className=\"popup__input popup__input_type_link-url\"\r\n                                    placeholder=\"Ссылка на картинку\"\r\n                                />\r\n                                <span className=\"error-link error-message\"></span>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"button popup__button\" disabled>+</button>\r\n                        </form>\r\n                    }\r\n                />}\r\n\r\n                {/* Попап обновления аватара */}\r\n                <EditAvatarPopup\r\n                    isEditAvatarPopupOpen={isEditAvatarPopupOpen}\r\n                    onEditAvatarPopupToggle={onEditAvatarPopupToggle}\r\n                    onSubmitAvatar={onSubmitAvatar}\r\n                />\r\n            </section>\r\n        </main>\r\n    );\r\n});\r\n\r\nexport default Main;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './Main';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\n\nfunction App() {\n\n  const [isEditProfileOpen, setEditProfileOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [selectedCardImageUrl, setSelectedCardImage] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    api\n      .getUserInfo()\n      .then(({ avatar, name, about, _id }) => {\n        setCurrentUser((userData) => {\n          const newUserData = { ...userData, name, about, avatar, _id };\n          return newUserData;\n        });\n      })\n      .catch(err => console.error(err));\n  }, []);\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfileOpen(!isEditProfileOpen);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(!isAddPlacePopupOpen);\n  };\n\n  const handleCardClick = (imageUrl) => {\n    if (selectedCardImageUrl) {\n      setSelectedCardImage(null);\n      return;\n    };\n    setSelectedCardImage(imageUrl);\n  };\n\n  const submitProfileHandler = ({ name, about }) => {\n    api\n      .updateUserInfo(name, about)\n      .then(newUserData => {\n        setCurrentUser(newUserData);\n        handleEditProfileClick();\n      });\n  };\n\n  const submitAvatarHandler = ({ avatar }) => {\n    api\n      .updateUserAvatar(avatar)\n      .then(newUserData => {\n        setCurrentUser((currentUserData) => {\n          const userDataCopy = { ...currentUserData, avatar: newUserData.avatar };\n          return userDataCopy;\n        });\n        handleEditAvatarClick();\n      });\n  };\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <Header />\n      <Main\n        isEditProfileOpen={isEditProfileOpen}\n        isAddPlacePopupOpen={isAddPlacePopupOpen}\n        isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n        onEditAvatarPopupToggle={handleEditAvatarClick}\n        onEditProfilePopupToggle={handleEditProfileClick}\n        onAddPlacePopupToggle={handleAddPlaceClick}\n        selectedImage={selectedCardImageUrl}\n        onCardClick={handleCardClick}\n        submitProfile={submitProfileHandler}\n        onSubmitAvatar={submitAvatarHandler}\n      />\n      <Footer />\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('.root')\n);\n"],"sourceRoot":""}